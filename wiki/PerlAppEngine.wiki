# This page has the plan for getting Perl supported on Google AppEngine

= Introduction =

This is the current (initial) plan for how to get Perl supported on AppEngine.

= Details =

The major tasks are:

  # Making Perl "safe" for the App Engine cloud.
    # This might be done using Safe.pm so Perl can't do things that are [http://code.google.com/appengine/docs/python/sandbox.html not allowed in the cloud] such as attempting to open a socket, write to a file, or do dynamic linking.
    # Code that performs these illegal actions must raise an error.
    # This might also include changes to the Perl build system to easily enable the creation of a suitable executable which links necessary XS modules statically and disallows dynamic linking. It might need to turn off certain support at compile time rather than depending on Safe.pm.
    # Appropriate test cases and documentation should be written.
    # The community could do this, without help from the Google App Engine team.
  # Writing the public version of the Google API's (i.e. base classes that define the API which need to be subclassed in order to achieve the desired functionality) (This would start with the test cases and the documentation.)
    # The community could do this, without help from the Google App Engine team.
  # Writing the Development Kit with a built-in web server
    # Appropriate test cases and documentation should be written.
    # The community could do this, without help from the Google App Engine team.
  # Writing the Development Kit "container" (i.e. the glue code which routes requests arriving at the web server to the perl interpreter and back.)
    # This would also include the low-level implementations of the public base classes which implement work-alike functionality to the Datastore, Mail, Images, Memcache, URL Fetch, and Users libraries provided by Google.
    # Writing this container would result in the recommended list of Perl modules to be included by default in the Google App Engine implementation along with the core Perl modules.
    # Appropriate test cases and documentation should be written.
    # The community could do this, without help from the Google App Engine team.
  # Determining what would be the recommended list of Perl modules to be included by default in the Google App Engine implementation along with the core Perl modules.
    # Appropriate test cases and documentation should be written.
    # The community could do this, without help from the Google App Engine team.
  # Writing the Google App Engine "container" (i.e. the glue code which routes requests arriving at the web server to the perl interpreter and back.)
    # This would also include the low-level implementations of the public base classes
    # Appropriate test cases and documentation should be written.
    # This would have to be done by someone within Google, perhaps on the App Engine team or working in conjunction with them.